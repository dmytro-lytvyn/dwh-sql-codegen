-- 1.0 [2019-08-27]
- Switched to Python 3
- Started to use UUID based on business key values instead of Surrogate Keys
- Renamed Batch Info tables to Metadata
- Removed PK Lookup tables, started to use Metadata tables to check if key exists
- Replaced MD5 with SHA1 for record hashes
- For Foreign Keys, adding an indexed UUID column
- Removed loading of inferred records
- Rename columns in History tables
- Generate FKs for columns named like column_id or column_key to just column_uuid

-- 0.6 [2018-10-16]
- Replace implicit type casting to explicit for business keys and hash column (failed on JSON field)
- Allow to manually set inferred entity names due to a UI bug on Mac OS not allowing to select from a dropdown
- Fix drop trigger statement for partitioned table DDL
- Comment out ANALYZE statements
- Add forgotten is_track_deleted column
- Update README.md

-- 0.5 [2016-06-23]
- Added an option to Rebuild Indexes after data load
- Added an option to partition table by date column for Postgres (using a trigger and a function)
- Removed schema name from index name, shortened long staging tables names
- Added auto-decode from timezone 'UTC' for Unix timestamps

-- 0.4 [2015-11-25]
- Changed Distkey/Sortkey from position to flags 1/0
- Use Distkey/Sortkey in Redshift
- Add indexes on "Distkey/Sortkey Pos != 0" columns to Postgres
- By default comment out pk_lookup DDL section for non-main entities
- Moved the FK BK expressions to a lower level in source table select, where BK and Hash are
- Fixed more than one date_updated columns
- Added "nulls last" to date_updated columns
- Added timestamp with/without timezone to Hash definitions to use formatting
- Added is_deleted flag in batch_info (is_track_deleted for snapshot load tables) for snapshot loads (move old row to history, keep pk_lookup, remove the row in main)
- Added session id to inferred stage table names, to avoid overwriting with parallel scripts
- Disabled dropping of temporary staging batch table, to avoid unnoticed collisions between running scripts
- Added begin/lock table/commit to avoid conlicts when loading inferred tables with no direct depencendies.
- Showing dropdown tables for FKs even from other stage DBs within one project
- Fixed that "Import Column" didn't populate target attribute name/type
- Disabled Analyze for inferred entities, because it takes too much time
- Showing stage table name in entities tree
- Allowing now to check Sortkey or Distkey for BK columns, because separate indexes might be required for composite (multi-column) indexes
- Removed intendation for "create index" statements

-- 0.3 [2015-06-29]
- Add "Track changes", "Keep history" flags
- When a column is ignored, still use it for last_updated
- Add optional tablespace to tables
- Add target schema to generated file name
- Add ".sql" to save file name in Linux
- Add "Is Truncate Stage" flag
- Add "Is Ignore Changes" flag for columns
- Use tablespace for stage tables and indexes
- Add indexes to stage tables (all entity_bks, row_number, batch_number_old ?)
- Add indexes on target tables DDL (entity_bk for pk_lookup, all entity_keys)
- Remove primary key from history tables
- Setting (use "Is Fk Mandatory") to ignore NULL for entity/inferred BK

-- 0.2 [2015-06-19]
- For inferred: subname of another entity (to populate a column in)
- is_delete_temp_tables flag
- Add DDL generation
- Fix bpchar and int4 -> timestamp for unix timestamps
- Add settings for temporary/permanent stage tables, drop after use or not.
- Fix numeric type without precision

--0.1 [2015-05-30]
- add entity bk
- build hash from all columns as char
- add order by updated date and hash
- build inferred section from each inferred row
- build middle lookup sections with entity name only
- build stage2 - entity key with required joins, then all other columns mixed with fk column keys plus left joins (alias by column name).
- in history, first add system columns, then all table columns.
- Add custom table expression field
- Add custom column expression field
- Add stage schema to stage_db table, use it in all scripts for staging tables
